image: mambaorg/micromamba:latest

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - test
  - build
  - accessibility
  - deploy

jupyter-test:
 stage: build
  before_script:
    - micromamba install -y -n base -f environment.yml

  script:
    # simply run the code to test if it can be execute successfully with no errors raised
    # using numpy.testing where possible to check solutions and implementations
    - jupyter nbconvert --clear-output --to notebook --inplace ws/*implemented.ipynb
    - jupyter execute ws/*implemented.ipynb
    # test links in the book
    - jupyter-book build . --builder linkcheck

jupyter-build:
  stage: build
  before_script:
    - micromamba install -y -n base -f environment.yml

  script:
    # clear output
    - jupyter nbconvert --clear-output --to notebook --inplace ws/*.ipynb
    # clear any old files
    - jupyter-book clean .
    # build book
    - jupyter-book build .
    # add some gitlab flourish
    - python _convert.py
  artifacts:
    paths:
      - _build/

a11y:
  stage: accessibility
  image: "$CI_TEMPLATE_REGISTRY_HOST/gitlab-org/ci-cd/accessibility:6.2.3"
  script:
    - a11y_urls=$(find _build/ -name "*.html" -type f)
    - /gitlab-accessibility.sh "$a11y_urls"
  allow_failure: true
  artifacts:
    when: always
    expose_as: 'Accessibility Reports'
    paths: ['reports/']
    reports:
      accessibility: reports/gl-accessibility.json

pages:
  stage: deploy
  image: busybox:latest
  script:
    - mv _build/html public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
